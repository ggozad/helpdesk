server {

    error_log stderr;

    default_type application/octet-stream;

    ssl_certificate /etc/nginx/cert/${CERT_NAME};
    ssl_certificate_key /etc/nginx/cert/${CERT_KEY_NAME};

    server_tokens off;
    error_log stderr;

    listen 8080 ssl;
    server_name ${API_HOSTNAME};
    client_max_body_size 110m;

    location / {
        proxy_pass ${API_HOST_URL};
    }
}


server {

    error_log stderr;

    default_type application/octet-stream;

    ssl_certificate /etc/nginx/cert/${CERT_NAME};
    ssl_certificate_key /etc/nginx/cert/${CERT_KEY_NAME};

    server_tokens off;
    error_log stderr;

    listen 8080 ssl;
    server_name ${SITE_HOSTNAME};
    client_max_body_size 110m;

    location / {
        proxy_pass ${SITE_HOST_URL};
    }

    location /sockjs-node {
        proxy_pass http://host.docker.internal:3000/sockjs-node;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
    }

}